{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_transformComics","getCharacter","id","getComic","comic","name","title","description","count","pageCount","lang","textObjects","language","thumbnail","path","extension","price","prices","char","slice","homepage","urls","wiki","comics","items","Skeleton","className","setContent","Component","Spinner","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Descr","styled","p","View","imgStyle","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","to","resourceURI","substring","CharInfo","charId","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.ec0a0c15.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request, clearError, process, setProcess } = useHttp()\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n\tconst _apiKey = 'apikey=1b84fd6221b25b51d1016d2f1d8be8a3'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?&${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?&${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformComics = comic => {\r\n\t\treturn {\r\n\t\t\tid: comic.id,\r\n\t\t\tname: comic.title,\r\n\t\t\tdescription: comic.description || 'There is no description',\r\n\t\t\tcount: comic.pageCount\r\n\t\t\t\t? `${comic.pageCount} p.`\r\n\t\t\t\t: 'No information about the number of pages',\r\n\t\t\tlang: comic.textObjects.language || 'en-us',\r\n\t\t\tthumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n\t\t\tprice: comic.prices.price ? `${comic.prices.price}$` : 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items.slice(0, 10),\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t}\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = useState('waiting')\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (\r\n\t\t\turl,\r\n\t\t\tmethod = 'GET',\r\n\t\t\tbody = null,\r\n\t\t\theaders = { 'Content-Type': 'application/json' }\r\n\t\t) => {\r\n\t\t\tsetProcess('loading')\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json()\r\n\r\n\t\t\t\treturn data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetProcess('error')\r\n\t\t\t\tthrow e\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading')\r\n\t}, [])\r\n\r\n\treturn { request, clearError, process, setProcess }\r\n}\r\n","import \"./skeleton.scss\";\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">\n        Please select a character to see information\n      </p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Skeleton;\n","import ErrorMessage from '../components/errorMessage/errorMessage'\r\nimport Skeleton from '../components/skeleton/Skeleton'\r\nimport Spinner from '../components/spinner/Spinner'\r\n\r\nexport const setContent = (process, Component, data) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn <Skeleton />\r\n\t\tcase 'loading':\r\n\t\t\treturn <Spinner />\r\n\t\tcase 'confirmed':\r\n\t\t\treturn <Component data={data} />\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage />\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state')\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport ErrorMessage from './../errorMessage/errorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t};\r\n\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react'\nimport './randomChar.scss'\nimport mjolnir from '../../resources/img/mjolnir.png'\nimport styled from 'styled-components'\nimport useMarvelService from './../../services/MarvelService'\nimport { setContent } from '../../utils/setContent'\n\nconst Descr = styled.p`\n\tfont-size: 14px;\n\tline-height: 18px;\n`\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null)\n\tconst { getCharacter, clearError, process, setProcess } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\n\t\tconst timerId = setInterval(updateChar, 60000)\n\n\t\treturn () => {\n\t\t\tclearInterval(timerId)\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char)\n\t}\n\n\tconst updateChar = () => {\n\t\tclearError()\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n\t\tgetCharacter(id)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'))\n\t}\n\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{setContent(process, View, char)}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className='button button__main'>\n\t\t\t\t\t<div className='inner'>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt='mjolnir' className='randomchar__decoration' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = data\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt='Random character'\n\t\t\t\tclassName='randomchar__img'\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<Descr>{description}</Descr>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar\n","import { useState, useEffect, useRef, useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './charList.scss'\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage'\n\nexport const setContent = (process, Component, newItemLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner />\n\t\tcase 'loading':\n\t\t\treturn newItemLoading ? <Component /> : <Spinner />\n\t\tcase 'confirmed':\n\t\t\treturn <Component />\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage />\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state')\n\t}\n}\n\nconst CharList = props => {\n\tconst [charList, setCharList] = useState([])\n\tconst [newItemLoading, setNewItemLoading] = useState(false)\n\tconst [offset, setOffset] = useState(210)\n\tconst [charEnded, setCharEnded] = useState(false)\n\n\tconst { getAllCharacters, process, setProcess } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t\t\t.then(() => setProcess('confirmed'))\n\t}\n\n\tconst onCharListLoaded = newCharList => {\n\t\tlet ended = false\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList])\n\t\tsetNewItemLoading(false)\n\t\tsetOffset(offset => offset + 9)\n\t\tsetCharEnded(ended)\n\t}\n\n\tconst itemRefs = useRef([])\n\n\tconst focusOnItem = id => {\n\t\titemRefs.current.forEach(item =>\n\t\t\titem.classList.remove('char__item_selected')\n\t\t)\n\t\titemRefs.current[id].classList.add('char__item_selected')\n\t\titemRefs.current[id].focus()\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' }\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: 'unset' }\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={el => (itemRefs.current[i] = el)}\n\t\t\t\t\tclassName='char__item'\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={e => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t<div className='char__name'>{item.name}</div>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t\t// А эта конструкция вынесена для центровки спиннера/ошибки\n\t\treturn <ul className='char__grid'>{items}</ul>\n\t}\n\n\tconst elements = useMemo(() => {\n\t\treturn setContent(process, () => renderItems(charList), newItemLoading)\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [process])\n\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t{elements}\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList\n","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport useMarvelService from '../../services/MarvelService'\n\nimport './charInfo.scss'\nimport { setContent } from '../../utils/setContent'\n\nconst CharInfo = props => {\n\tconst [char, setChar] = useState(null)\n\tconst { charId } = props\n\n\tconst { getCharacter, clearError, process, setProcess } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [charId])\n\n\tconst updateChar = () => {\n\t\tif (!charId) {\n\t\t\treturn\n\t\t}\n\t\tclearError()\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'))\n\t}\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char)\n\t}\n\n\treturn <div className='char__info'>{setContent(process, View, char)}</div>\n}\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = data\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0\n\t\t\t\t\t? comics.map((item, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={i} className='char__comics-item'>\n\t\t\t\t\t\t\t\t\t<Link to={`/comics/${item.resourceURI.substring(43)}`}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t  })\n\t\t\t\t\t: 'There are no comics with this character'}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n}\n\nexport default CharInfo\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = id => {\r\n\t\tsetChar(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className='char__content'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className='bg-decoration' src={decoration} alt='vision' />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;"],"sourceRoot":""}